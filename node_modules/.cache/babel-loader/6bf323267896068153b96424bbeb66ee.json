{"ast":null,"code":"if (global.GENTLY_HIJACK) require = GENTLY_HIJACK.hijack(require);\n\nvar http = require(\"http\"),\n    querystring = require('querystring'),\n    _ = require(\"underscore\"),\n    crypto = require(\"crypto\"),\n    LastFmBase = require(\"./lastfm-base\");\n\nvar WRITE_METHODS = [\"album.addtags\", \"album.removetag\", \"album.share\", \"artist.addtags\", \"artist.removetag\", \"artist.share\", \"artist.shout\", \"event.attend\", \"event.share\", \"event.shout\", \"library.addalbum\", \"library.addartist\", \"library.addtrack\", \"library.removealbum\", \"library.removeartist\", \"library.removetrack\", \"library.removescrobble\", \"playlist.addtrack\", \"playlist.create\", \"radio.tune\", \"track.addtags\", \"track.ban\", \"track.love\", \"track.removetag\", \"track.scrobble\", \"track.share\", \"track.unban\", \"track.unlove\", \"track.updatenowplaying\", \"user.shout\"],\n    SIGNED_METHODS = [\"auth.getmobilesession\", \"auth.getsession\", \"auth.gettoken\", \"radio.getplaylist\", \"user.getrecentstations\", \"user.getrecommendedartists\", \"user.getrecommendedevents\"];\n\nvar LastFmRequest = module.exports = function (lastfm, method, params) {\n  var that = this;\n  LastFmBase.call(this);\n  params = params || {};\n  that.registerHandlers(params.handlers);\n  sendRequest(lastfm.host, lastfm.url, params);\n\n  function sendRequest(host, url, params) {\n    var httpVerb = isWriteRequest() ? \"POST\" : \"GET\";\n    var requestParams = buildRequestParams(params);\n    var data = querystring.stringify(requestParams);\n\n    if (httpVerb == \"GET\") {\n      url += \"?\" + data;\n    }\n\n    var options = {\n      host: host,\n      port: 80,\n      path: url,\n      method: httpVerb,\n      headers: requestHeaders(httpVerb, host, data)\n    };\n    var req = http.request(options, chunkedResponse);\n    req.on(\"error\", function (error) {\n      that.emit(\"error\", error);\n    });\n\n    if (httpVerb == \"POST\") {\n      req.write(data);\n    }\n\n    req.end();\n  }\n\n  function buildRequestParams(params) {\n    var requestParams = that.filterParameters(params, [\"signed\", \"write\"]);\n    requestParams.method = method;\n    requestParams.api_key = requestParams.api_key || lastfm.api_key;\n    requestParams.format = requestParams.format || lastfm.format;\n\n    if (params.track && typeof params.track === \"object\") {\n      requestParams.artist = params.track.artist[\"#text\"];\n      requestParams.track = params.track.name;\n\n      if (params.track.mbid) {\n        requestParams.mbid = params.track.mbid;\n      }\n\n      if (params.track.album) {\n        requestParams.album = requestParams.album || params.track.album[\"#text\"];\n      }\n    }\n\n    if (requiresSignature()) {\n      requestParams.api_sig = createSignature(requestParams, lastfm.secret);\n    }\n\n    return requestParams;\n  }\n\n  function requiresSignature() {\n    return params.signed || isWriteRequest() || isSignedMethod(method);\n  }\n\n  function isWriteRequest() {\n    return params.write || isWriteMethod(method);\n  }\n\n  function isSignedMethod(method) {\n    return method && _(SIGNED_METHODS).include(method.toLowerCase());\n  }\n\n  function isWriteMethod(method) {\n    return method && _(WRITE_METHODS).include(method.toLowerCase());\n  }\n\n  function requestHeaders(httpVerb, host, data) {\n    var headers = {\n      \"User-Agent\": lastfm.useragent\n    };\n\n    if (httpVerb == \"POST\") {\n      headers[\"Content-Length\"] = data.length;\n      headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    }\n\n    return headers;\n  }\n\n  function chunkedResponse(response) {\n    var data = \"\";\n    response.on(\"data\", function (chunk) {\n      data += chunk.toString(\"utf8\");\n    });\n    response.on(\"end\", function () {\n      if (lastfm.format !== \"json\") {\n        that.emit(\"success\", data);\n        return;\n      }\n\n      try {\n        var json = JSON.parse(data);\n\n        if (json.error) {\n          that.emit(\"error\", json);\n          return;\n        }\n\n        that.emit(\"success\", json);\n      } catch (e) {\n        that.emit(\"error\", e);\n      }\n    });\n  }\n\n  function createSignature(params, secret) {\n    var sig = \"\";\n    Object.keys(params).sort().forEach(function (key) {\n      if (key != \"format\") {\n        var value = typeof params[key] !== \"undefined\" && params[key] !== null ? params[key] : \"\";\n        sig += key + value;\n      }\n    });\n    sig += secret;\n    return crypto.createHash(\"md5\").update(sig, \"utf8\").digest(\"hex\");\n  }\n};\n\nLastFmRequest.prototype = Object.create(LastFmBase.prototype);","map":{"version":3,"sources":["/home/diegofreitas/clone-lastfm-antigo/node_modules/lastfm/lib/lastfm/lastfm-request.js"],"names":["global","GENTLY_HIJACK","require","hijack","http","querystring","_","crypto","LastFmBase","WRITE_METHODS","SIGNED_METHODS","LastFmRequest","module","exports","lastfm","method","params","that","call","registerHandlers","handlers","sendRequest","host","url","httpVerb","isWriteRequest","requestParams","buildRequestParams","data","stringify","options","port","path","headers","requestHeaders","req","request","chunkedResponse","on","error","emit","write","end","filterParameters","api_key","format","track","artist","name","mbid","album","requiresSignature","api_sig","createSignature","secret","signed","isSignedMethod","isWriteMethod","include","toLowerCase","useragent","length","response","chunk","toString","json","JSON","parse","e","sig","Object","keys","sort","forEach","key","value","createHash","update","digest","prototype","create"],"mappings":"AAAA,IAAIA,MAAM,CAACC,aAAX,EAA0BC,OAAO,GAAGD,aAAa,CAACE,MAAd,CAAqBD,OAArB,CAAV;;AAE1B,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;AAAA,IACIG,WAAW,GAAGH,OAAO,CAAC,aAAD,CADzB;AAAA,IAEII,CAAC,GAAGJ,OAAO,CAAC,YAAD,CAFf;AAAA,IAGIK,MAAM,GAAGL,OAAO,CAAC,QAAD,CAHpB;AAAA,IAIIM,UAAU,GAAGN,OAAO,CAAC,eAAD,CAJxB;;AAMA,IAAIO,aAAa,GAAG,CAAC,eAAD,EAAkB,iBAAlB,EAAqC,aAArC,EACZ,gBADY,EACM,kBADN,EAC0B,cAD1B,EAC0C,cAD1C,EAEZ,cAFY,EAEI,aAFJ,EAEmB,aAFnB,EAGZ,kBAHY,EAGQ,mBAHR,EAG6B,kBAH7B,EAIZ,qBAJY,EAIW,sBAJX,EAImC,qBAJnC,EAI0D,wBAJ1D,EAKZ,mBALY,EAKS,iBALT,EAMZ,YANY,EAOZ,eAPY,EAOK,WAPL,EAOkB,YAPlB,EAOgC,iBAPhC,EAQZ,gBARY,EAQM,aARN,EAQqB,aARrB,EAQoC,cARpC,EASZ,wBATY,EAUZ,YAVY,CAApB;AAAA,IAWIC,cAAc,GAAG,CAAC,uBAAD,EAA0B,iBAA1B,EAA6C,eAA7C,EACb,mBADa,EAEb,wBAFa,EAEa,4BAFb,EAE2C,2BAF3C,CAXrB;;AAeA,IAAIC,aAAa,GAAGC,MAAM,CAACC,OAAP,GAAiB,UAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,EAAiC;AACpE,MAAIC,IAAI,GAAG,IAAX;AACAT,EAAAA,UAAU,CAACU,IAAX,CAAgB,IAAhB;AACAF,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AAEAC,EAAAA,IAAI,CAACE,gBAAL,CAAsBH,MAAM,CAACI,QAA7B;AAEAC,EAAAA,WAAW,CAACP,MAAM,CAACQ,IAAR,EAAcR,MAAM,CAACS,GAArB,EAA0BP,MAA1B,CAAX;;AAEA,WAASK,WAAT,CAAqBC,IAArB,EAA2BC,GAA3B,EAAgCP,MAAhC,EAAwC;AACtC,QAAIQ,QAAQ,GAAGC,cAAc,KAAK,MAAL,GAAc,KAA3C;AACA,QAAIC,aAAa,GAAGC,kBAAkB,CAACX,MAAD,CAAtC;AACA,QAAIY,IAAI,GAAGvB,WAAW,CAACwB,SAAZ,CAAsBH,aAAtB,CAAX;;AACA,QAAIF,QAAQ,IAAI,KAAhB,EAAuB;AACrBD,MAAAA,GAAG,IAAI,MAAMK,IAAb;AACD;;AACD,QAAIE,OAAO,GAAG;AACVR,MAAAA,IAAI,EAAEA,IADI;AAEVS,MAAAA,IAAI,EAAE,EAFI;AAGVC,MAAAA,IAAI,EAAET,GAHI;AAIVR,MAAAA,MAAM,EAAES,QAJE;AAKVS,MAAAA,OAAO,EAAEC,cAAc,CAACV,QAAD,EAAWF,IAAX,EAAiBM,IAAjB;AALb,KAAd;AAOA,QAAIO,GAAG,GAAG/B,IAAI,CAACgC,OAAL,CAAaN,OAAb,EAAsBO,eAAtB,CAAV;AACAF,IAAAA,GAAG,CAACG,EAAJ,CAAO,OAAP,EAAgB,UAASC,KAAT,EAAgB;AAC5BtB,MAAAA,IAAI,CAACuB,IAAL,CAAU,OAAV,EAAmBD,KAAnB;AACH,KAFD;;AAGA,QAAIf,QAAQ,IAAI,MAAhB,EAAwB;AACpBW,MAAAA,GAAG,CAACM,KAAJ,CAAUb,IAAV;AACH;;AACDO,IAAAA,GAAG,CAACO,GAAJ;AACD;;AAED,WAASf,kBAAT,CAA4BX,MAA5B,EAAoC;AAClC,QAAIU,aAAa,GAAGT,IAAI,CAAC0B,gBAAL,CAAsB3B,MAAtB,EAA8B,CAAC,QAAD,EAAW,OAAX,CAA9B,CAApB;AACAU,IAAAA,aAAa,CAACX,MAAd,GAAuBA,MAAvB;AACAW,IAAAA,aAAa,CAACkB,OAAd,GAAwBlB,aAAa,CAACkB,OAAd,IAAyB9B,MAAM,CAAC8B,OAAxD;AACAlB,IAAAA,aAAa,CAACmB,MAAd,GAAuBnB,aAAa,CAACmB,MAAd,IAAwB/B,MAAM,CAAC+B,MAAtD;;AACA,QAAI7B,MAAM,CAAC8B,KAAP,IAAgB,OAAO9B,MAAM,CAAC8B,KAAd,KAAwB,QAA5C,EAAsD;AACpDpB,MAAAA,aAAa,CAACqB,MAAd,GAAuB/B,MAAM,CAAC8B,KAAP,CAAaC,MAAb,CAAoB,OAApB,CAAvB;AACArB,MAAAA,aAAa,CAACoB,KAAd,GAAsB9B,MAAM,CAAC8B,KAAP,CAAaE,IAAnC;;AACA,UAAIhC,MAAM,CAAC8B,KAAP,CAAaG,IAAjB,EAAuB;AACrBvB,QAAAA,aAAa,CAACuB,IAAd,GAAqBjC,MAAM,CAAC8B,KAAP,CAAaG,IAAlC;AACD;;AACD,UAAIjC,MAAM,CAAC8B,KAAP,CAAaI,KAAjB,EAAwB;AACtBxB,QAAAA,aAAa,CAACwB,KAAd,GAAsBxB,aAAa,CAACwB,KAAd,IAAuBlC,MAAM,CAAC8B,KAAP,CAAaI,KAAb,CAAmB,OAAnB,CAA7C;AACD;AACF;;AACD,QAAIC,iBAAiB,EAArB,EAAyB;AACvBzB,MAAAA,aAAa,CAAC0B,OAAd,GAAwBC,eAAe,CAAC3B,aAAD,EAAgBZ,MAAM,CAACwC,MAAvB,CAAvC;AACD;;AACD,WAAO5B,aAAP;AACD;;AAED,WAASyB,iBAAT,GAA6B;AAC3B,WAAOnC,MAAM,CAACuC,MAAP,IAAiB9B,cAAc,EAA/B,IAAqC+B,cAAc,CAACzC,MAAD,CAA1D;AACD;;AAED,WAASU,cAAT,GAA0B;AACxB,WAAOT,MAAM,CAACyB,KAAP,IAAgBgB,aAAa,CAAC1C,MAAD,CAApC;AACD;;AAED,WAASyC,cAAT,CAAwBzC,MAAxB,EAAgC;AAC9B,WAAOA,MAAM,IAAIT,CAAC,CAACI,cAAD,CAAD,CAAkBgD,OAAlB,CAA0B3C,MAAM,CAAC4C,WAAP,EAA1B,CAAjB;AACD;;AAED,WAASF,aAAT,CAAuB1C,MAAvB,EAA+B;AAC7B,WAAOA,MAAM,IAAIT,CAAC,CAACG,aAAD,CAAD,CAAiBiD,OAAjB,CAAyB3C,MAAM,CAAC4C,WAAP,EAAzB,CAAjB;AACD;;AAED,WAASzB,cAAT,CAAwBV,QAAxB,EAAkCF,IAAlC,EAAwCM,IAAxC,EAA8C;AAC5C,QAAIK,OAAO,GAAG;AACZ,oBAAcnB,MAAM,CAAC8C;AADT,KAAd;;AAIA,QAAIpC,QAAQ,IAAI,MAAhB,EAAwB;AACtBS,MAAAA,OAAO,CAAC,gBAAD,CAAP,GAA4BL,IAAI,CAACiC,MAAjC;AACA5B,MAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,mCAA1B;AACD;;AAED,WAAOA,OAAP;AACD;;AAED,WAASI,eAAT,CAAyByB,QAAzB,EAAmC;AACjC,QAAIlC,IAAI,GAAG,EAAX;AACAkC,IAAAA,QAAQ,CAACxB,EAAT,CAAY,MAAZ,EAAoB,UAASyB,KAAT,EAAgB;AAChCnC,MAAAA,IAAI,IAAImC,KAAK,CAACC,QAAN,CAAe,MAAf,CAAR;AACH,KAFD;AAGAF,IAAAA,QAAQ,CAACxB,EAAT,CAAY,KAAZ,EAAmB,YAAW;AAC5B,UAAIxB,MAAM,CAAC+B,MAAP,KAAkB,MAAtB,EAA8B;AAC5B5B,QAAAA,IAAI,CAACuB,IAAL,CAAU,SAAV,EAAqBZ,IAArB;AACA;AACD;;AACD,UAAI;AACF,YAAIqC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWvC,IAAX,CAAX;;AACA,YAAIqC,IAAI,CAAC1B,KAAT,EAAgB;AACdtB,UAAAA,IAAI,CAACuB,IAAL,CAAU,OAAV,EAAmByB,IAAnB;AACA;AACD;;AACDhD,QAAAA,IAAI,CAACuB,IAAL,CAAU,SAAV,EAAqByB,IAArB;AACD,OAPD,CAQA,OAAMG,CAAN,EAAS;AACPnD,QAAAA,IAAI,CAACuB,IAAL,CAAU,OAAV,EAAmB4B,CAAnB;AACD;AACF,KAhBD;AAiBD;;AAED,WAASf,eAAT,CAAyBrC,MAAzB,EAAiCsC,MAAjC,EAAyC;AACvC,QAAIe,GAAG,GAAG,EAAV;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYvD,MAAZ,EAAoBwD,IAApB,GAA2BC,OAA3B,CAAmC,UAASC,GAAT,EAAc;AAC/C,UAAIA,GAAG,IAAI,QAAX,EAAqB;AACnB,YAAIC,KAAK,GAAG,OAAO3D,MAAM,CAAC0D,GAAD,CAAb,KAAuB,WAAvB,IAAsC1D,MAAM,CAAC0D,GAAD,CAAN,KAAgB,IAAtD,GAA6D1D,MAAM,CAAC0D,GAAD,CAAnE,GAA2E,EAAvF;AACAL,QAAAA,GAAG,IAAIK,GAAG,GAAGC,KAAb;AACD;AACF,KALD;AAMAN,IAAAA,GAAG,IAAIf,MAAP;AACA,WAAO/C,MAAM,CAACqE,UAAP,CAAkB,KAAlB,EAAyBC,MAAzB,CAAgCR,GAAhC,EAAqC,MAArC,EAA6CS,MAA7C,CAAoD,KAApD,CAAP;AACD;AACF,CAtHD;;AAwHAnE,aAAa,CAACoE,SAAd,GAA0BT,MAAM,CAACU,MAAP,CAAcxE,UAAU,CAACuE,SAAzB,CAA1B","sourcesContent":["if (global.GENTLY_HIJACK) require = GENTLY_HIJACK.hijack(require);\n\nvar http = require(\"http\")\n  , querystring = require('querystring')\n  , _ = require(\"underscore\")\n  , crypto = require(\"crypto\")\n  , LastFmBase = require(\"./lastfm-base\");\n\nvar WRITE_METHODS = [\"album.addtags\", \"album.removetag\", \"album.share\",\n        \"artist.addtags\", \"artist.removetag\", \"artist.share\", \"artist.shout\",\n        \"event.attend\", \"event.share\", \"event.shout\",\n        \"library.addalbum\", \"library.addartist\", \"library.addtrack\",\n        \"library.removealbum\", \"library.removeartist\", \"library.removetrack\", \"library.removescrobble\",\n        \"playlist.addtrack\", \"playlist.create\",\n        \"radio.tune\",\n        \"track.addtags\", \"track.ban\", \"track.love\", \"track.removetag\",\n        \"track.scrobble\", \"track.share\", \"track.unban\", \"track.unlove\",\n        \"track.updatenowplaying\",\n        \"user.shout\"],\n    SIGNED_METHODS = [\"auth.getmobilesession\", \"auth.getsession\", \"auth.gettoken\",\n        \"radio.getplaylist\",\n        \"user.getrecentstations\", \"user.getrecommendedartists\", \"user.getrecommendedevents\"];\n\nvar LastFmRequest = module.exports = function(lastfm, method, params) {\n  var that = this;\n  LastFmBase.call(this);\n  params = params || {};\n\n  that.registerHandlers(params.handlers);\n\n  sendRequest(lastfm.host, lastfm.url, params);\n\n  function sendRequest(host, url, params) {\n    var httpVerb = isWriteRequest() ? \"POST\" : \"GET\"\n    var requestParams = buildRequestParams(params);\n    var data = querystring.stringify(requestParams);\n    if (httpVerb == \"GET\") {\n      url += \"?\" + data;\n    }\n    var options = {\n        host: host,\n        port: 80,\n        path: url,\n        method: httpVerb,\n        headers: requestHeaders(httpVerb, host, data)\n    };\n    var req = http.request(options, chunkedResponse);\n    req.on(\"error\", function(error) {\n        that.emit(\"error\", error);\n    });\n    if (httpVerb == \"POST\") {\n        req.write(data);\n    }\n    req.end()\n  }\n\n  function buildRequestParams(params) {\n    var requestParams = that.filterParameters(params, [\"signed\", \"write\"]);\n    requestParams.method = method;\n    requestParams.api_key = requestParams.api_key || lastfm.api_key;\n    requestParams.format = requestParams.format || lastfm.format;\n    if (params.track && typeof params.track === \"object\") {\n      requestParams.artist = params.track.artist[\"#text\"];\n      requestParams.track = params.track.name;\n      if (params.track.mbid) {\n        requestParams.mbid = params.track.mbid;\n      }\n      if (params.track.album) {\n        requestParams.album = requestParams.album || params.track.album[\"#text\"];\n      }\n    }\n    if (requiresSignature()) {\n      requestParams.api_sig = createSignature(requestParams, lastfm.secret);\n    }\n    return requestParams;\n  }\n\n  function requiresSignature() {\n    return params.signed || isWriteRequest() || isSignedMethod(method);\n  }\n\n  function isWriteRequest() {\n    return params.write || isWriteMethod(method);\n  }\n\n  function isSignedMethod(method) {\n    return method && _(SIGNED_METHODS).include(method.toLowerCase());\n  }\n\n  function isWriteMethod(method) {\n    return method && _(WRITE_METHODS).include(method.toLowerCase());\n  }\n\n  function requestHeaders(httpVerb, host, data) {\n    var headers = {\n      \"User-Agent\": lastfm.useragent\n    };\n\n    if (httpVerb == \"POST\") {\n      headers[\"Content-Length\"] = data.length;\n      headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    }\n\n    return headers;\n  }\n\n  function chunkedResponse(response) {\n    var data = \"\";\n    response.on(\"data\", function(chunk) {\n        data += chunk.toString(\"utf8\");\n    });\n    response.on(\"end\", function() {\n      if (lastfm.format !== \"json\") {\n        that.emit(\"success\", data);\n        return;\n      }\n      try {\n        var json = JSON.parse(data);\n        if (json.error) {\n          that.emit(\"error\", json);\n          return;\n        }\n        that.emit(\"success\", json);\n      }\n      catch(e) {\n        that.emit(\"error\", e)\n      }\n    });\n  }\n\n  function createSignature(params, secret) {\n    var sig = \"\";\n    Object.keys(params).sort().forEach(function(key) {\n      if (key != \"format\") {\n        var value = typeof params[key] !== \"undefined\" && params[key] !== null ? params[key] : \"\";\n        sig += key + value;\n      }\n    });\n    sig += secret;\n    return crypto.createHash(\"md5\").update(sig, \"utf8\").digest(\"hex\");\n  }\n};\n\nLastFmRequest.prototype = Object.create(LastFmBase.prototype);\n"]},"metadata":{},"sourceType":"script"}