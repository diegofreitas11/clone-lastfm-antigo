{"ast":null,"code":"var LastFmBase = require(\"./lastfm-base\");\n\nvar LastFmSession = function (lastfm, user, key) {\n  var that = this;\n  LastFmBase.call(this);\n  user = user || \"\";\n  key = key || \"\";\n  this.user = user;\n  this.key = key;\n\n  this.authorise = function (token, options) {\n    authorise(token, options);\n  };\n\n  this.isAuthorised = function () {\n    return isAuthorised();\n  };\n\n  function authorise(token, options) {\n    options = options || {};\n    registerEventHandlers(options);\n    validateToken(token);\n  }\n\n  function registerEventHandlers(options) {\n    that.registerHandlers(options.handlers);\n  }\n\n  function validateToken(token) {\n    if (!token) {\n      that.emit(\"error\", new Error(\"No token supplied\"));\n      return;\n    }\n\n    var params = {\n      token: token\n    },\n        request = lastfm.request(\"auth.getsession\", params);\n    request.on(\"success\", authoriseSession);\n    request.on(\"error\", bubbleError);\n  }\n\n  function isAuthorised() {\n    return that.key && that.key !== '';\n  }\n\n  function authoriseSession(result) {\n    if (!result.session) {\n      that.emit(\"error\", new Error(\"Unexpected error\"));\n      return;\n    }\n\n    setSessionDetails(result.session);\n    that.emit(\"authorised\", that);\n  }\n\n  function setSessionDetails(session) {\n    that.user = session.name;\n    that.key = session.key;\n  }\n\n  function bubbleError(error) {\n    that.emit(\"error\", error);\n  }\n};\n\nLastFmSession.prototype = Object.create(LastFmBase.prototype);\nmodule.exports = LastFmSession;","map":{"version":3,"sources":["/home/diegofreitas/clone-lastfm-antigo/node_modules/lastfm/lib/lastfm/lastfm-session.js"],"names":["LastFmBase","require","LastFmSession","lastfm","user","key","that","call","authorise","token","options","isAuthorised","registerEventHandlers","validateToken","registerHandlers","handlers","emit","Error","params","request","on","authoriseSession","bubbleError","result","session","setSessionDetails","name","error","prototype","Object","create","module","exports"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAAxB;;AAEA,IAAIC,aAAa,GAAG,UAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4B;AAC9C,MAAIC,IAAI,GAAG,IAAX;AACAN,EAAAA,UAAU,CAACO,IAAX,CAAgB,IAAhB;AACAH,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACAC,EAAAA,GAAG,GAAGA,GAAG,IAAI,EAAb;AAEA,OAAKD,IAAL,GAAYA,IAAZ;AAEA,OAAKC,GAAL,GAAWA,GAAX;;AAEA,OAAKG,SAAL,GAAiB,UAASC,KAAT,EAAgBC,OAAhB,EAAyB;AACxCF,IAAAA,SAAS,CAACC,KAAD,EAAQC,OAAR,CAAT;AACD,GAFD;;AAIA,OAAKC,YAAL,GAAoB,YAAW;AAC7B,WAAOA,YAAY,EAAnB;AACD,GAFD;;AAIA,WAASH,SAAT,CAAmBC,KAAnB,EAA0BC,OAA1B,EAAmC;AACjCA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEAE,IAAAA,qBAAqB,CAACF,OAAD,CAArB;AAEAG,IAAAA,aAAa,CAACJ,KAAD,CAAb;AACD;;AAED,WAASG,qBAAT,CAA+BF,OAA/B,EAAwC;AACtCJ,IAAAA,IAAI,CAACQ,gBAAL,CAAsBJ,OAAO,CAACK,QAA9B;AACD;;AAED,WAASF,aAAT,CAAuBJ,KAAvB,EAA8B;AAC5B,QAAI,CAACA,KAAL,EAAY;AACVH,MAAAA,IAAI,CAACU,IAAL,CAAU,OAAV,EAAmB,IAAIC,KAAJ,CAAU,mBAAV,CAAnB;AACA;AACD;;AAED,QAAIC,MAAM,GAAG;AAAET,MAAAA,KAAK,EAAEA;AAAT,KAAb;AAAA,QACIU,OAAO,GAAGhB,MAAM,CAACgB,OAAP,CAAe,iBAAf,EAAkCD,MAAlC,CADd;AAGAC,IAAAA,OAAO,CAACC,EAAR,CAAW,SAAX,EAAsBC,gBAAtB;AAEAF,IAAAA,OAAO,CAACC,EAAR,CAAW,OAAX,EAAoBE,WAApB;AACD;;AAED,WAASX,YAAT,GAAwB;AACtB,WAAOL,IAAI,CAACD,GAAL,IAAYC,IAAI,CAACD,GAAL,KAAa,EAAhC;AACD;;AAED,WAASgB,gBAAT,CAA0BE,MAA1B,EAAkC;AAChC,QAAI,CAACA,MAAM,CAACC,OAAZ,EAAqB;AACnBlB,MAAAA,IAAI,CAACU,IAAL,CAAU,OAAV,EAAmB,IAAIC,KAAJ,CAAU,kBAAV,CAAnB;AACA;AACD;;AACDQ,IAAAA,iBAAiB,CAACF,MAAM,CAACC,OAAR,CAAjB;AACAlB,IAAAA,IAAI,CAACU,IAAL,CAAU,YAAV,EAAwBV,IAAxB;AACD;;AAED,WAASmB,iBAAT,CAA2BD,OAA3B,EAAoC;AAClClB,IAAAA,IAAI,CAACF,IAAL,GAAYoB,OAAO,CAACE,IAApB;AACApB,IAAAA,IAAI,CAACD,GAAL,GAAWmB,OAAO,CAACnB,GAAnB;AACD;;AAED,WAASiB,WAAT,CAAqBK,KAArB,EAA4B;AAC1BrB,IAAAA,IAAI,CAACU,IAAL,CAAU,OAAV,EAAmBW,KAAnB;AACD;AACF,CAjED;;AAmEAzB,aAAa,CAAC0B,SAAd,GAA0BC,MAAM,CAACC,MAAP,CAAc9B,UAAU,CAAC4B,SAAzB,CAA1B;AAEAG,MAAM,CAACC,OAAP,GAAiB9B,aAAjB","sourcesContent":["var LastFmBase = require(\"./lastfm-base\");\n\nvar LastFmSession = function(lastfm, user, key) {\n  var that = this;\n  LastFmBase.call(this);\n  user = user || \"\";\n  key = key || \"\";\n\n  this.user = user;\n\n  this.key = key;\n\n  this.authorise = function(token, options) {\n    authorise(token, options);\n  };\n\n  this.isAuthorised = function() {\n    return isAuthorised();\n  }\n\n  function authorise(token, options) {\n    options = options || { };\n\n    registerEventHandlers(options);\n\n    validateToken(token);\n  }\n\n  function registerEventHandlers(options) {\n    that.registerHandlers(options.handlers);\n  }\n\n  function validateToken(token) {\n    if (!token) {\n      that.emit(\"error\", new Error(\"No token supplied\"));\n      return;\n    }\n\n    var params = { token: token },\n        request = lastfm.request(\"auth.getsession\", params);\n\n    request.on(\"success\", authoriseSession);\n\n    request.on(\"error\", bubbleError);\n  }\n\n  function isAuthorised() {\n    return that.key && that.key !== '';\n  }\n\n  function authoriseSession(result) {\n    if (!result.session) {\n      that.emit(\"error\", new Error(\"Unexpected error\"));\n      return;\n    }\n    setSessionDetails(result.session);\n    that.emit(\"authorised\", that);\n  }\n\n  function setSessionDetails(session) {\n    that.user = session.name;\n    that.key = session.key;\n  }\n\n  function bubbleError(error) {\n    that.emit(\"error\", error);\n  }\n};\n\nLastFmSession.prototype = Object.create(LastFmBase.prototype);\n\nmodule.exports = LastFmSession;\n"]},"metadata":{},"sourceType":"script"}